<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<title>Arraybracket.Bundling.Sample</title>
		
		<style>
			html {
				font-size: 0;
				font-family: Calibri, Verdana, Tahoma, sans-serif;
			}

			body {
				margin: 20px;
				color: #333;
			}

			h1 {
				margin: 0;
				line-height: 1;
			}

			p {
				margin-top: 20px;
			}

			i {
				font-style: inherit;
				font-family: Consolas, monospace;
				font-size: 0.9em;
				color: #a33;
			}
		</style>
	</head>
	<body>
		<h1>Arraybracket.Bundling.Sample</h1>
		<p>In this simple sample, the scripts page will change its font-size based on the width of the page (both on document ready and window resize). The logic for that behavior is in <i>app.ts</i>, which depends on <i>helpers.ts</i>, which subsequently depends on jQuery. Since the code in <i>app.ts</i> calls code in <i>helpers.ts</i> <b>before</b> the whole page is loaded, it's important that <i>helpers.ts</i> (and jQuery) are included before <i>app.ts</i> is parsed and executed.</p>
		<p>When <i>web.config</i> has <i>debug=true</i>, you can see that <i>ScriptDependencyOrderer</i> includes the scripts in the required order (jQuery, <i>helpers.ts</i>, <i>app.ts</i>). When <i>debug=false</i> and the scripts are combined, that same order is maintained.</p>
		<p>You can look at <i>Global.asax</i> to see how the script bundle was initialized, and look in the script files to see various dependency references. You'll notice that although <i>helpers.ts</i> has a reference to <i>jquery.d.ts</i>, the first script in the bundle is actually <i>jquery-1.9.1.js</i>, because of some name matching heuristics.</p>
		<p><em>Note: this sample uses <a href="http://bundletransformer.codeplex.com/">Bundle Transformer</a> for TypeScript and minification (which is where the <i>JsTransformer</i> class comes from).</em></p>
		@System.Web.Optimization.Scripts.Render("~/Scripts/combined")
	</body>
</html>